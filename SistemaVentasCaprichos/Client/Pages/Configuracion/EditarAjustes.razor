@page "/editar-ajustes/{idAjustes:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@attribute [Authorize]


<button @onclick="@Volver" class="btn btn-sm btn-secondary">
    <i class="oi oi-arrow-circle-left"></i> Volver al listado
</button>

<hr />

<div class="d-flex justify-content-between mb-3">
    <h3><b>Editar Configuracion</b></h3>
    <div>
        <button @onclick="@(() => BorrarArticulo(Configuracion.Id))" class="btn btn-sm btn-danger">
            <i class="oi oi-trash"></i> Eliminar Configuracion
        </button>
    </div>
</div>
<FormAjustes TextBotonSubmit="Guardar cambios"
              OnValidSubmit="@EditarArtic" Configuracion="@Configuracion" />
@code {
    Configuracion Configuracion = new Configuracion();
    [Parameter] public int idAjustes { get; set; }

    protected async override Task OnParametersSetAsync()
    {
        Configuracion = await Http.GetFromJsonAsync<Configuracion>($"/api/Configuracion/{idAjustes}");
    }

    void Volver()
    {
        NavigationManager.NavigateTo("/lista-Configuracion");
    }

    async Task EditarArtic()
    {
        var confirmacion = await JS.InvokeAsync<bool>("confirmar", "Editar",
            $"¿Desea editar {Configuracion.NombreSistema}?", "question");
        if (confirmacion)
        {
            var respuesta = await Http.PutAsJsonAsync("/api/Configuracion", Configuracion);

            if (respuesta.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/lista-Configuracion");
                await JS.InvokeVoidAsync("simple", "¡Éxito!", "Configuracion editada", "success");
            }
            else
            {
                await JS.InvokeVoidAsync("simple", "Error",
                    "No se pudo editar la Configuracion", "error");
            }
        }
    }

    async Task BorrarArticulo(int idCategoria)
    {
        var confirmacion = await JS.InvokeAsync<bool>("confirmar", "Eliminar",
            $"¿Desea eliminar {Configuracion.NombreSistema}?", "warning");
        if (confirmacion)
        {
            var respuesta = await Http.DeleteAsync($"/api/Configuracion/{Configuracion.Id}");

            if (respuesta.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("/lista-Configuracion");
                await JS.InvokeVoidAsync("simple", "¡Éxito!", "Configuracion eliminada", "success");
            }
            else
            {
                await JS.InvokeVoidAsync("simple", "Error",
                    "No se pudo eliminar la Configuracion", "error");
            }
        }
    }
}
