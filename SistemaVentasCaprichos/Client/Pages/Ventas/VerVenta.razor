@page "/ver-venta/{idventa:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@attribute [Authorize(Roles = "admin, empleado")]

@using System.Text.Json

<div class="d-flex justify-content-between mb-2">
    <div class="btn-group">
        <button id="miboton" class="btn btn-sm btn-secondary" @onclick="@Volver">
            <i class="oi oi-arrow-circle-left"></i> Volver atrás
        </button>
        <button id="miboton" class="btn btn-sm btn-primary" onclick="window.print()">
         Imprimir
        </button>
        <button id="miboton" class="btn btn-sm btn-primary" @onclick="@NuevaVenta">
           Nueva venta
        </button>
    </div>
    <div class="btn-group">
    </div>
</div>

@if (venta != null)
{
    <div class="card m-1" style="border-color: #fff; border-style: dotted; box-shadow: 22px 3px 39px 1px rgba(0,0,0,0.51);">
        <div class="card-body">
            <div class="cabecera">
                <img src="https://i.ibb.co/p118xjy/logo1-24-18234.png" alt="logo" class="img-fluid">
            </div>

            <div class="informacion-fija">
                <small class="lema">Caprichos, un estilo para cada ocasion</small> <br />
                <small><b>Dirección:</b>@ListaAjustes.Direccion</small><br />
                <small><b>N° factura:</b> @venta.Numero.ToString("D5")</small><br />
                <small><b>RUC:</b> @ListaAjustes.RUC</small> <br />
                <small><b>Teléfono:</b> @ListaAjustes.Telefono</small><br />
                <small><b>Email:</b> @ListaAjustes.Email</small> <br />
                <small><b>Propietario:</b> @ListaAjustes.NombrePropietario</small><br />
                <small><b>Fecha:</b> @venta.Fecha</small><br />
                <strong>*** NO SE ACEPTAN CAMBIOS NI DEVOLUCIONES ***</strong><br>
                <strong>*** REVISE BIEN SU MERCADERÍA ***</strong>
            </div>

            <div class="info-cliente">
                @if (venta.ClienteId != null)
                {
                    <hr />
                    <div>
                        @if (venta.ClienteId != null)
                        {
                            <small><b>Cliente:</b> @venta.Cliente.Nombre @venta.Cliente.Apellido </small> <br />
                        }
                        else
                        {
                            <small><b>Cliente:</b> CLIENTE GENÉRICO</small> <br />
                        }
                        <small><b>Dirección:</b> @venta.Cliente.Dirección</small> <br />
                        <small><b>Teléfono:</b> @venta.Cliente.Teléfono</small>
                    </div>
                }
            </div>


            <hr />

            <table class="table table-sm">
                <thead>
                    <tr>
                        <th><small>Descripción</small></th>
                        <th><small>Precio</small></th>
                        <th><small>Cantidad</small></th>
                        <th><small>Descuento</small></th>
                        <th><small>Iva</small></th>
                        <th><small>Subtotal</small></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in venta.DetalleVentas)
                    {
                        <tr>
                            <td style="text-transform:uppercase"><small>@item.Articulo.Nombre</small></td>
                            <td><small>C$ @item.Precio</small></td>
                            <td><small>@item.Cantidad</small></td>
                            <td><small>@item.Descuento %</small></td>
                            <td><small>C$ @item.IvaAlternativo.ToString("#.##") </small></td>
                            <td><small>C$ @item.SubTotal</small></td>
                        </tr>
                    }
                </tbody>
            </table>

            <p class="card-text text-right m-4">
                <h6><b>TOTAL</b></h6>
                <h5><b>C$ @venta.Total</b></h5>               
            </p>
        </div>
    </div>
}

@code {
    public Venta venta { get; set; }

    [Parameter] public int idventa { get; set; }

    public Configuracion ListaAjustes { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var httpResponse = await Http.GetAsync($"api/ventas/{idventa}");
        if (httpResponse.IsSuccessStatusCode)
        {
            var responseString = await httpResponse.Content.ReadAsStringAsync();
            venta = JsonSerializer.Deserialize<Venta>(responseString,
                new JsonSerializerOptions() { PropertyNameCaseInsensitive = true });
        }
        else
        {
            await JS.InvokeVoidAsync("simple", "Error", "Venta no encontrada.", "error");
            NavigationManager.NavigateTo("lista-ventas");
        }
        await CargarAjustes();

    }



    void Volver()
    {
        NavigationManager.NavigateTo("lista-ventas");
    }
    void NuevaVenta()
    {
        NavigationManager.NavigateTo("crear-venta");
    }

    async Task CargarAjustes()
    {
        var httpResponse = await Http.GetAsync($"api/configuracion/1");
        if (httpResponse.IsSuccessStatusCode)
        {
            var responseString = await httpResponse.Content.ReadAsStringAsync();
            ListaAjustes = JsonSerializer.Deserialize<Configuracion>(responseString,
                new JsonSerializerOptions() { PropertyNameCaseInsensitive = true });
        }
        else
        {
            await JS.InvokeVoidAsync("simple", "Error", "Venta no encontrada.", "error");
            NavigationManager.NavigateTo("lista-ventas");
        }
    }

}