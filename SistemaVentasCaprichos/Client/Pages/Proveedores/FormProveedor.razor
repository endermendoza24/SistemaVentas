@inject HttpClient Http
@inject NavigationManager NavigationManager
@using System.Text.Json

<EditForm Model="@Proveedores" OnValidSubmit="@OnValidSubmit">
    <div class="form-field mt-2 mb-2">
        <div class="row">
            <div class="col-6">
                <div class="form-group row">
                    <label class="col-4 col-form-label">Nombre</label>
                    <div class="col">
                        <div class="input-group">
                            <MudTextField @bind-Value="@Proveedores.Nombre" Label="Nombre" Variant="Variant.Outlined" oninput="this.value=this.value.toUpperCase()"
                                          Margin="Margin.Dense"></MudTextField>
                        </div>
                        <ValidationMessage For="@(() => Proveedores.Nombre)" />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-4 col-form-label">Teléfono</label>
                    <div class="col">
                        <div class="input-group">
                            <MudTextField @bind-Value="@Proveedores.Telefono" Label="Teléfono" Variant="Variant.Outlined" oninput="this.value=this.value.toUpperCase()"
                                          Margin="Margin.Dense"></MudTextField>
                            <ValidationMessage For="@(() => Proveedores.Telefono)" />
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-4 col-form-label">Email</label>
                    <div class="col">
                        <div class="input-group">
                            <MudTextField @bind-Value="@Proveedores.Email" Label="Correo electrónico" Variant="Variant.Outlined"
                                          Margin="Margin.Dense"></MudTextField>
                            <ValidationMessage For="@(() => Proveedores.Email)" />
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-4 col-form-label">Dirección</label>
                    <div class="col">
                        <div class="input-group">
                            <MudTextField @bind-Value="@Proveedores.Direccion" Label="Dirección" Variant="Variant.Outlined" oninput="this.value=this.value.toUpperCase()"
                                          Margin="Margin.Dense" Lines="3"></MudTextField>
                            <ValidationMessage For="@(() => Proveedores.Direccion)" />
                        </div>
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-4 col-form-label">Dar de baja</label>
                    <div class="col">
                        <div class="input-group">
                            <MudTooltip Text="Si selecciona esta opción dará de baja al proveedor correspondiente." Color="Color.Secondary" Placement="Placement.Top">
                                <MudSwitch @bind-Checked="@Proveedores.Estado" Label="Activo" Color="Color.Success" />
                            </MudTooltip>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <button type="submit" class="btn btn-block btn-success">
            <i class="oi oi-check "></i>
            <text style="color:white"></text>
        </button>       
    </div>
    <DataAnnotationsValidator />
</EditForm>

@code {

    [Parameter] public Proveedores Proveedores { get; set; } = new Proveedores();
    
    [Parameter] public string TextBotonSubmit { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }       
}