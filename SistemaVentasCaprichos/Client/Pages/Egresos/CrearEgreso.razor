@page "/crear-egresos"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject ISnackbar Snackbar
@attribute [Authorize(Roles = "admin")]

<h3><b>Nueva egresos</b></h3>

<FormEgresos textSubmit=" Cargar egresos" OnValidSubmit="Egresar" egresos="egresos"
           ocultabtn=false></FormEgresos>

@code {
    public Egresos egresos = new Egresos();
    
    async Task Egresar()
    {
        var confirmacion = await JS.InvokeAsync<bool>("confirmar", "¿Finalizar egresos?",
            $"Total: ${egresos.Total}.", "question");
        if (confirmacion)
        {
            var respuesta = await Http.PostAsJsonAsync("api/egresos", egresos);
            var cuerporespuest = await respuesta.Content.ReadAsStringAsync();

            if (respuesta.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("lista-egresos/");
                //await JS.InvokeVoidAsync("simple", "¡Éxito!", "Egresos cargada", "success");
                Snackbar.Add("¡¡¡Egresos finalizada con éxito!!!", Severity.Success, a =>
            a.VisibleStateDuration = 200);
            }
            else
            {
                //await JS.InvokeVoidAsync("simple", "Error", "No se pudo cargar egresos", "error");
                Snackbar.Add("No se pudo hacer la egresos", Severity.Success, a =>
            a.VisibleStateDuration = 200);
            }
        }
    }
}