@page "/crear-compra"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject ISnackbar Snackbar
@attribute [Authorize(Roles = "admin")]

<h3><b>Hacer compra</b></h3>

<FormCompra textSubmit=" Cargar compra" OnValidSubmit="CrearCompr" compra="compra"
           ocultabtn=false articulos="articulos" categoria="categoria" ListaProveedores="ListaProveedores"></FormCompra>

@code {
    public Compra compra = new Compra();
    public List<Articulo> articulos { get; set; } = new List<Articulo>();
    public List<Categoria> categoria { get; set; } = new List<Categoria>();
    public List<Proveedores> ListaProveedores { get; set; } = new List<Proveedores>();

    protected override async Task OnInitializedAsync()
    {
        articulos = await Http.GetFromJsonAsync<List<Articulo>>("api/articulos"); //muestro todos los articulos
        categoria = await Http.GetFromJsonAsync<List<Categoria>>("api/cate"); //muestro todos los articulos
        ListaProveedores = await Http.GetFromJsonAsync<List<Proveedores>>("api/proveedores"); //trae los proveedores
    }

    async Task CrearCompr()
    {
        var confirmacion = await JS.InvokeAsync<bool>("confirmar", "¿Finalizar compra?",
            $"Total: C${compra.Total}. Proveedor: {compra.ProveedoresId}", "question");
        if (confirmacion)
        {
            var respuesta = await Http.PostAsJsonAsync("api/compras", compra);
            var cuerporespuest = await respuesta.Content.ReadAsStringAsync();

            if (respuesta.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo("lista-compras/");
                //await JS.InvokeVoidAsync("simple", "¡Éxito!", "Compra cargada", "success");
                Snackbar.Add("¡Compra finalizada con éxito!", Severity.Success, a =>
            a.VisibleStateDuration = 200);
            }
            else
            {
                //await JS.InvokeVoidAsync("simple", "Error", "No se pudo cargar compra", "error");
                Snackbar.Add("No se pudo hacer la compra", Severity.Success, a =>
            a.VisibleStateDuration = 200);
            }
        }
    }
}